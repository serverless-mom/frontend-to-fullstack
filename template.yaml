AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Resources:
  functionD031CE3B:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-functionD031CE3B
      Description: !Sub
        - Stackery Stack ${StackeryStackTagName} Environment ${StackeryEnvironmentTagName} Function ${ResourceName}
        - ResourceName: welcome-site
      CodeUri: src/functionD031CE3B
      Handler: index.handler
      Runtime: nodejs8.10
      MemorySize: 3008
      Timeout: 30
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref table72FC655F
      Environment:
        Variables:
          TABLE_NAME: !Ref table72FC655F
          TABLE_ARN: !GetAtt table72FC655F.Arn
          DB_INSTANCE: !Ref databaseFB989970
          DB_ADDRESS: !GetAtt databaseFB989970.Endpoint.Address
          DB_PORT: !GetAtt databaseFB989970.Endpoint.Port
          DB_ARN: !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:${databaseFB989970}
      Events:
        apiC3E555F:
          Type: Api
          Properties:
            Path: /home
            Method: GET
            RestApiId: !Ref apiC3E555F
    Metadata:
      StackeryName: welcome-site
  function51513AFD:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-function51513AFD
      Description: !Sub
        - Stackery Stack ${StackeryStackTagName} Environment ${StackeryEnvironmentTagName} Function ${ResourceName}
        - ResourceName: account-lookup
      CodeUri: src/function51513AFD
      Handler: index.handler
      Runtime: nodejs8.10
      MemorySize: 2368
      Timeout: 20
      Tracing: Active
      Policies:
        - AWSXrayWriteOnlyAccess
        - DynamoDBCrudPolicy:
            TableName: !Ref table72FC655F
      Environment:
        Variables:
          TABLE_NAME: !Ref table72FC655F
          TABLE_ARN: !GetAtt table72FC655F.Arn
      Events:
        apiC3E555F:
          Type: Api
          Properties:
            Path: /
            Method: GET
            RestApiId: !Ref apiC3E555F
        timerE6D5AFC7:
          Type: Schedule
          Properties:
            Schedule: rate(1 minute)
    Metadata:
      StackeryName: account-lookup
  table72FC655F:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: email
          AttributeType: S
      KeySchema:
        - AttributeName: email
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TableName: !Sub ${AWS::StackName}-table72FC655F
    Metadata:
      StackeryName: accounts
  apiC3E555F:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub
        - ${ResourceName} From Stackery Stack ${StackeryStackTagName} Environment ${StackeryEnvironmentTagName}
        - ResourceName: apiC3E555F
      StageName: !Ref StackeryEnvironmentAPIGatewayStageName
      DefinitionBody:
        swagger: '2.0'
        info: {}
        paths:
          /:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${function51513AFD.Arn}/invocations
              responses: {}
          /home:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${functionD031CE3B.Arn}/invocations
              responses: {}
      EndpointConfiguration: REGIONAL
  databaseFB989970:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: '5'
      AllowMajorVersionUpgrade: true
      AutoMinorVersionUpgrade: true
      BackupRetentionPeriod: '1'
      CopyTagsToSnapshot: true
      DBInstanceClass: db.t2.micro
      DBSubnetGroupName: !Ref databaseFB989970SubnetGroup
      Engine: mariadb
      EngineVersion: '10.2'
      MasterUsername: root
      MasterUserPassword: movie_reference
      MultiAZ: false
      PubliclyAccessible: true
      StorageType: gp2
      Tags:
        - Key: Name
          Value: !Sub
            - Stackery Stack ${StackeryStackTagName} Environment ${StackeryEnvironmentTagName} Database ${ResourceName}
            - ResourceName: crm-store
      VPCSecurityGroups:
        - !Ref databaseFB989970SecurityGroup
    Metadata:
      StackeryName: crm-store
  databaseFB989970SubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Sub
        - Stackery Stack ${StackeryStackTagName} Environment ${StackeryEnvironmentTagName} Database ${ResourceName} VPC Subnets
        - ResourceName: databaseFB989970
      SubnetIds: !Ref DefaultVPCSubnets
      Tags:
        - Key: Name
          Value: !Sub
            - Stackery Stack ${StackeryStackTagName} Environment ${StackeryEnvironmentTagName} Database ${ResourceName} VPC Subnets
            - ResourceName: databaseFB989970
  databaseFB989970SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Database Security Group
      SecurityGroupIngress:
        CidrIp: 0.0.0.0/0
        FromPort: 3306
        IpProtocol: tcp
        ToPort: 3306
      Tags:
        - Key: Name
          Value: !Sub
            - Stackery Stack ${StackeryStackTagName} Environment ${StackeryEnvironmentTagName} Database ${ResourceName} VPC Security Group
            - ResourceName: crm-store
      VpcId: !Ref DefaultVPCId
Parameters:
  StackeryStackTagName:
    Type: String
    Description: Stack Name (injected by Stackery at deployment time)
  StackeryEnvironmentTagName:
    Type: String
    Description: Environment Name (injected by Stackery at deployment time)
  StackeryEnvironmentAPIGatewayStageName:
    Type: String
    Description: Environment name used for API Gateway Stage names (injected by Stackery at deployment time)
  DefaultVPCId:
    Type: AWS::EC2::VPC::Id
    Description: AWS account-specific default VPC ID (injected by Stackery at deployment time)
  DefaultVPCSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: AWS account-specific default VPC subnets (injected by Stackery at deployment time)